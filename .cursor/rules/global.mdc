---
description: 
globs: 
alwaysApply: true
---
This is Arcadia, an MCP server in Node.js providing helpful tools for Windows users of Cursor.

<project_summary>
Arcadia is a comprehensive MCP (Model Context Protocol) server that enables Cursor AI to execute bash commands on Windows systems. Key components:
• **MCP Server**: TypeScript-based server using `@modelcontextprotocol/sdk` with stdio transport
• **Core Tools**: `run_bash_command` (executes bash commands with timeout/environment control) and `read_output` (retrieves paginated command output)
• **Storage System**: Timestamped file storage for command outputs with unique ID generation
• **Configuration**: JSON-based config system for bash path, storage directory, and other settings
• **Build System**: Local Node.js installation, TypeScript compilation, and cross-platform (x64/arm64) distribution
• **Testing**: Comprehensive test suite with both unit tests (Jest) and MCP client integration tests
• **CI/CD**: GitHub Actions workflow for automated building and publishing of release artifacts
</project_summary>

<guidelines>
- Use the stdio MCP method.
- When asked to add a rule, edit `.cursor/rules/global.mdc` (this file).
- All .sh scripts should start with `cd "$( dirname "${BASH_SOURCE[0]}" )"` to set the working directory to the script's containing directory, then navigate from that known location.
- Always use the local Node.js and npm installations from the `node/` folder in the project root. Node.js and npm are NOT installed globally in the system - they must be run from the local `node/` directory. In your script, update `PATH` to include the local `node/` directory and then execute `node` and `npm` normally. Remember that $PATH must contain _absolute_ paths.
- Never use `npx`. In your scripts, add the local `node/` folder to $PATH. Always call node/npm via your scripts.
  ```
  cd "$( dirname "${BASH_SOURCE[0]}" )"
  cd ..
  export PATH=$PWD/node:$PATH
  ```
- When installing new packages, run `npm install`, don't edit `package.json` directly. Remember to set PATH to include our local `node/`. Then, run `scripts/clean.sh` and `scripts/init.sh`, otherwise our build script will NOT copy the updated `node_modules` into the build output.
- Never use `import.meta` outside of startup in `index.ts`. Use dependency injection to pass directory paths to modules instead.
- Use dependency injection pattern for modules that need to resolve paths. Pass required paths as parameters from the main entry point rather than having modules determine their own paths.
</guidelines>

<information>
- If you see `[200~` in a bash error, it's a tool bug; we don't have xterm bracketed-paste on Windows.
- Documentation for the MCP TypeScript SDK and the MCP protocol are in `context/` and indexed. Use your codebase search tool.
</information>
